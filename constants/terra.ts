export enum CosmosError {
  TxParseError = "sdk.TxParseError",
  InvalidSequence = "sdk.InvalidSequence",
  Unauthorized = "sdk.Unauthorized",
  InsufficientFunds = "sdk.InsufficientFunds",
  UnknownRequest = "sdk.UnknownRequest",
  InvalidAddress = "sdk.InvalidAddress",
  InvalidPubkey = "sdk.InvalidPubkey",
  UnknownAddress = "sdk.UnknownAddress",
  InvalidCoins = "sdk.InvalidCoins",
  OutOfGas = "sdk.OutOfGas",
  MemoTooLarge = "sdk.MemoTooLarge",
  InsufficientFee = "sdk.InsufficientFee",
  MaxSignaturesExceeded = "sdk.MaxSignaturesExceeded",
  NoSignatures = "sdk.NoSignatures",
  FailedToMarshalJSON = "sdk.FailedToMarshalJSON",
  FailedToUnmarshalJSON = "sdk.FailedToUnmarshalJSON",
  InvalidRequest = "sdk.InvalidRequest",
  TxAlreadyInMempool = "sdk.TxAlreadyInMempool",
  MempoolFull = "sdk.MempoolFull",
  TxTooLarge = "sdk.TxTooLarge",
  KeyNotFound = "sdk.KeyNotFound",
  InvalidAccountPassword = "sdk.InvalidAccountPassword",
  TxSignerMismatch = "sdk.TxSignerMismatch",
  InvalidGasAdjustment = "sdk.InvalidGasAdjustment",
  InvalidHeight = "sdk.InvalidHeight",
  InvalidVersion = "sdk.InvalidVersion",
  InvalidChainID = "sdk.InvalidChainID",
  InvalidType = "sdk.InvalidType",
  TxTimeoutHeight = "sdk.TxTimeoutHeight",
  UnknownExtensionOptions = "sdk.UnknownExtensionOptions",
  IncorrectAccountSequence = "sdk.IncorrectAccountSequence",
  ProtobufPackingFailed = "sdk.ProtobufPackingFailed",
  ProtobufUnpackingFailed = "sdk.ProtobufUnpackingFailed",
  InternalLogicError = "sdk.InternalLogicError",
  Conflict = "sdk.Conflict",
  FeatureNotSupported = "sdk.FeatureNotSupported",
  NotFound = "sdk.NotFound",
  InternalIOError = "sdk.InternalIOError",
  ErrorInAppToml = "sdk.ErrorInAppToml",
}

export enum WasmError {
  ContractAccountExists = "wasm.ContractAccountExists",
  InstantiateFailed = "wasm.InstantiateFailed",
  ExecuteFailed = "wasm.ExecuteFailed",
  InsufficientGas = "wasm.InsufficientGas",
  InvalidGenesis = "wasm.InvalidGenesis",
  NotFound = "wasm.NotFound",
  InvalidMsg = "wasm.InvalidMsg",
  NoRegisteredQuerier = "wasm.NoRegisteredQuerier",
  NoRegisteredParser = "wasm.NoRegisteredParser",
  MigrationFailed = "wasm.MigrationFailed",
  NotMigratable = "wasm.NotMigratable",
  StoreCodeFailed = "wasm.StoreCodeFailed",
  ContractQueryFailed = "wasm.ContractQueryFailed",
  ExceedMaxContractSize = "wasm.ExceedMaxContractSize",
  ExceedMaxContractMsgSize = "wasm.ExceedMaxContractMsgSize",
  ExceedMaxContractDataSize = "wasm.ExceedMaxContractDataSize",
  ReplyFailed = "wasm.ReplyFailed",
  ExceedMaxQueryDepth = "wasm.ExceedMaxQueryDepth",
}

type TerraErrorMap = {
  sdk: {
    [code: number]: CosmosError;
  };
  wasm: {
    [code: number]: WasmError;
  };
};

export const TERRA_ERROR_MAP: TerraErrorMap = {
  // https://github.com/cosmos/cosmos-sdk/blob/master/types/errors/errors.go
  sdk: {
    2: CosmosError.TxParseError,
    3: CosmosError.InvalidSequence,
    4: CosmosError.Unauthorized,
    5: CosmosError.InsufficientFunds,
    6: CosmosError.UnknownRequest,
    7: CosmosError.InvalidAddress,
    8: CosmosError.InvalidPubkey,
    9: CosmosError.UnknownAddress,
    10: CosmosError.InvalidCoins,
    11: CosmosError.OutOfGas,
    12: CosmosError.MemoTooLarge,
    13: CosmosError.InsufficientFee,
    14: CosmosError.MaxSignaturesExceeded,
    15: CosmosError.NoSignatures,
    16: CosmosError.FailedToMarshalJSON,
    17: CosmosError.FailedToUnmarshalJSON,
    18: CosmosError.InvalidRequest,
    19: CosmosError.TxAlreadyInMempool,
    20: CosmosError.MempoolFull,
    21: CosmosError.TxTooLarge,
    22: CosmosError.KeyNotFound,
    23: CosmosError.InvalidAccountPassword,
    24: CosmosError.TxSignerMismatch,
    25: CosmosError.InvalidGasAdjustment,
    26: CosmosError.InvalidHeight,
    27: CosmosError.InvalidVersion,
    28: CosmosError.InvalidChainID,
    29: CosmosError.InvalidType,
    30: CosmosError.TxTimeoutHeight,
    31: CosmosError.UnknownExtensionOptions,
    32: CosmosError.IncorrectAccountSequence,
    33: CosmosError.ProtobufPackingFailed,
    34: CosmosError.ProtobufUnpackingFailed,
    35: CosmosError.InternalLogicError,
    36: CosmosError.Conflict,
    37: CosmosError.FeatureNotSupported,
    38: CosmosError.NotFound,
    39: CosmosError.InternalIOError,
    40: CosmosError.ErrorInAppToml,
  },

  // https://github.com/terra-money/core/blob/v0.5.16/x/wasm/types/errors.go
  wasm: {
    2: WasmError.ContractAccountExists,
    3: WasmError.InstantiateFailed,
    4: WasmError.ExecuteFailed,
    5: WasmError.InsufficientGas,
    6: WasmError.InvalidGenesis,
    7: WasmError.NotFound,
    8: WasmError.InvalidMsg,
    9: WasmError.NoRegisteredQuerier,
    10: WasmError.NoRegisteredParser,
    11: WasmError.MigrationFailed,
    12: WasmError.NotMigratable,
    13: WasmError.StoreCodeFailed,
    14: WasmError.ContractQueryFailed,
    15: WasmError.ExceedMaxContractSize,
    16: WasmError.ExceedMaxContractMsgSize,
    17: WasmError.ExceedMaxContractDataSize,
    18: WasmError.ReplyFailed,
    19: WasmError.ExceedMaxQueryDepth,
  },
};
